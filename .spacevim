" Comment the following line if you don't want Vim and NeoVim to share the
" same plugin download directory.
let g:spacevim_plug_home = '~/.vim/plugged'

" Uncomment the following line to override the leader key. The default value is space key "<\Space>".
" let g:spacevim_leader = "<\Space>"

" Uncomment the following line to override the local leader key. The default value is comma ','.
" let g:spacevim_localleader = ','

" Enable the existing layers in space-vim.
" Refer to https://github.com/liuchengxu/space-vim/blob/master/layers/LAYERS.md for all available layers.
let g:spacevim_layers = [
      "\ 'fzf', 'better-defaults', 'which-key','ycmd',
      \ 'fzf', 'better-defaults', 'ycmd', 'python',
      \ 'airline', 'syntax-checking', 'ctrlp',
      "\ 'ctrlp','syntax-checking', 'code-snippets',
      \ ]

" Uncomment the following line if your terminal(-emulator) supports true colors.
" let g:spacevim_enable_true_color = 1


" Uncomment the following if you have some nerd font installed.
let g:spacevim_nerd_fonts = 1

" If you want to have more control over the layer, try using Layer command.
" if g:spacevim.gui
  " Layer 'airline'
" endif

" Manage your own plugins.
" Refer to https://github.com/junegunn/vim-plug for more detials.
function! UserInit()

  " Plug 'junegunn/seoul256.vim'
  " Plug 'junegunn/vim-emoji'

  " ---- editing ----
  Plug 'tpope/vim-surround'
  Plug 'jiangmiao/auto-pairs'
  " ------------------

  Plug 'tpope/vim-repeat'
  Plug 'tpope/vim-commentary'

  " ---- airline Layer ----
  " Plug 'vim-airline/vim-airline-themes'
  " Plug 'vim-airline/vim-airline'
  let g:airline#extensions#tabline#left_sep = ' '
  let g:airline#extensions#tabline#left_alt_sep = '|'
  let g:airline#extensions#tabline#formatter = 'default'
  let g:airline_powerline_fonts = 1
  let g:airline#extensions#wordcount#filetypes = 'entersomerandomgibberish'
  let g:airline#extensions#tabline#enabled = 1
  " ----------------------
  "
  "Plug 'flazz/vim-colorschemes'
  "Plug 'felixhummel/setcolors.vim'

  Plug 'junegunn/vim-easy-align'
  Plug 'liuchengxu/vim-clap'


  " ---- better-motion ----
  " Plug 'haya14busa/incsearch.vim'
  Plug 'easymotion/vim-easymotion'
  " Plug 'haya14busa/incsearch-easymotion.vim'
  " Plug 'justinmk/vim-sneak'
  Plug 'unblevable/quick-scope'
  " ----------------------

  " ----------- Markdown ------------
    let g:markdown_syntax_conceal = 0
  Plug 'godlygeek/tabular'
  " Plug 'plasticboy/vim-markdown'
  "  let g:vim_markdown_folding_disabled = 1



  " Plug 'gabrielelana/vim-markdown'
  "     let g:markdown_enable_spell_checking = 0
  "     let g:markdown_enable_input_abbreviations = 1
  "     let g:markdown_enable_conceal = 1
  "     let g:markdown_enable_mappings = 1
  Plug 'iamcco/markdown-preview.vim'
  " Plug 'suan/vim-instant-markdown', {'for': 'markdown'}

  Plug 'wakatime/vim-wakatime'
  " ---------------------------------

  " Plug 'ctrlpvim/ctrlp.vim'
  " Plug 'mattn/emmet-vim'
      "let g:user_emmet_install_global = 0
      "let g:user_emmet_leader_key=','
  " Plug 'jaxbot/browserlink.vim'
  Plug 'othree/csscomplete.vim'

  " ---- file-manager ----
  Plug 'scrooloose/nerdtree'
    let g:NERDTreeMinimalUI = 1
  Plug 'ryanoasis/vim-devicons'
  " ----------------------

  " ----------- Theme ------------
  Plug 'whatyouhide/vim-gotham'
  Plug 'chriskempson/base16-vim'
  Plug 'cocopon/iceberg.vim'
  Plug 'arcticicestudio/nord-vim'
  Plug 'dylanaraps/wal.vim'
  Plug 'rakr/vim-two-firewatch'

  Plug 'Yggdroot/indentLine'
    let g:indentLine_enabled=1
    let g:indentLine_char='▏'
    let g:indentLine_first_char='▏'
    let g:indentLine_color_gui="#55606d"
    let g:indentLine_showFirstIndentLevel=0
    let g:indentLine_faster=1

  " Plug 'stanangeloff/php.vim'
  Plug 'junegunn/goyo.vim'
  " Plug 'vim-scripts/c.vim'
  "    filetype plugin on
  Plug 'junegunn/limelight.vim'

  " Plug 'johngrib/vim-game-code-break'

  Plug 'itchyny/calendar.vim'

" --------- Python ----------
  "Plug 'python-mode/python-mode', { 'for': 'python', 'branch': 'develop' }
  Plug 'jeetsukumaran/vim-pythonsense'
  let g:pymode_run_bind = '<leader>r'
  let g:pymode_lint_cwindow = 1
  let g:pymode_rope_completion = 1
  let g:pymode_rope_complete_on_dot = 1
  let g:pymode_rope_completion_bind = '<C-Space>'
  let g:pymode_python = 'python3'


" --------- Golang ----------
  Plug 'fatih/vim-go',{'do':':GoInstallBinaries'}
    let g:go_highlight_types = 1
    let g:go_highlight_functions = 1
    let g:go_highlight_function_calls = 1
    let g:go_highlight_operators = 1
    let g:go_highlight_extra_types = 1
  Plug 'AndrewRadev/splitjoin.vim'
  " ----------------------

  " Plug 'Yggdroot/indentLine'
  " Plug 'nathanaelkane/vim-indent-guides'
  Plug 'luochen1990/rainbow'

  " ---- code-snippets ----
  Plug 'SirVer/ultisnips'
  Plug 'honza/vim-snippets'
  Plug 'ervandew/supertab'
    " make YCM compatible with UltiSnips (using supertab)
    "let g:ycm_key_list_select_completion = ['<C-n>']
    "let g:ycm_key_list_previous_completion = ['<C-p>']
    let g:SuperTabDefaultCompletionType = '<C-n>'

    " better key bindings for UltiSnipsExpandTrigger
    let g:UltiSnipsExpandTrigger = "<c-space>"
    let g:UltiSnipsJumpForwardTrigger = "<C-j>"
    let g:UltiSnipsJumpBackwardTrigger = "<C-k>"
    "let g:UltiSnipsListSnippets="<c-h>"

  " ---- vimwiki ----
 " Plug 'vimwiki/vimwiki'
   let g:vimwiki_list = [{'path': '~/vimwiki/',
                         \ 'syntax': 'markdown', 'ext': '.md'}]
    nmap <Leader>wo <Plug>VimwikiIndex
    nmap <Leader>wq <Plug>VimwikiUISelect

  endfunction

" Override the default settings from space-vim as well as adding extras
function! UserConfig()

  " Uncomment the following line If you have installed the powerline fonts.

  " css complete
  autocmd FileType css setlocal omnifunc=csscomplete#CompleteCSS noci
  " NERDTree remap
  map <C-n> :NERDTreeToggle<CR>

  "   Range:   233 (darkest) ~ 238 (lightest)
  "   Default: 235
  " let g:space_vim_dark_background = 233
  " color space-vim-dark
  let g:airline_theme='base16'
  colorscheme iceberg
  set termguicolors
  "hi ctermbg=NONE ctermfg=Green guibg=NONE guifg=Green
  " color scheme section
  " colorscheme gotham256
  "colorscheme base16-default-dark
  "colorscheme nord
  " airline themes
  "let g:airline_theme='luna'
  "let g:airline_theme='minimalist'
  "highlight Normal guibg=NONE ctermbg=NONE

  "set noshowmode          "Disables mode in statusline in favor of airline

  endfunction
